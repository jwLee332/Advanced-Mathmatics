% straigt shpae
model = createpde();                                         
R1 = [3,4,-0.05,0.05,0.05,-0.05,0,0,5,5]';        
                                                                          
gd = R1;
ns = char('R1')';
sf = 'R1';
g = decsg(gd, sf, ns);
geometryFromEdges(model, g);

figure;
pdegplot(model, 'EdgeLabels', 'off');
axis equal;
axis([-1 1 0 6]);

%T-shape
model = createpde();                                         
R1 = [3,4,-0.05,0.05,0.05,-0.05,0,0,4.9,4.9]'; 
R2 = [3,4,0.3,-0.3,-0.3,0.3,4.9,4.9,5,5]';            
                                                                          
gd = [R1,R2];
ns = char('R1','R2')';
sf = 'R1+R2';
g = decsg(gd, sf, ns);
geometryFromEdges(model, g);

figure;
pdegplot(model, 'EdgeLabels', 'off');
axis equal;
axis([-1 1 0 6]);

%curved shape 1
model = createpde();
                                                  
R0 = [3,4,-0.05,0.05,0.05,-0.05,0,0,3,3]';       

cx = -4.2; cy = 3;
r_outer = 4.25;
r_inner = r_outer - 0.1;
N = 20;
theta = linspace(0,acos(3.7/4.2), N+1);

gd = R0;
ns_cell = {'R0'};   

for i = 1:N
    th1 = theta(i);
    th2 = theta(i+1);

    x1 = cx + r_outer * cos(th1);
    y1 = cy + r_outer * sin(th1);
    x2 = cx + r_outer * cos(th2);
    y2 = cy + r_outer * sin(th2);
    x3 = cx + r_inner * cos(th2);
    y3 = cy + r_inner * sin(th2);
    x4 = cx + r_inner * cos(th1);
    y4 = cy + r_inner * sin(th1);

    Ri = [3;4; x1; x2; x3; x4; y1; y2; y3; y4];
    gd = [gd, Ri];
    ns_cell{end+1} = sprintf('R%d', i);  
end

ns = char(ns_cell{:});
ns_list = cellstr(ns);


a = ns_list(1:end-1);

sf = [ strjoin(a, '+') ];

ns = ns';    

g = decsg(gd, sf, ns);
geometryFromEdges(model, g);

figure;
pdegplot(model, 'EdgeLabels', 'off');
axis equal;
axis([-1.5 0.5 0 6]);

%curved shape 2
model = createpde();
                                                  
R0 = [3,4,-0.05,0.05,0.05,-0.05,0,0,3,3]';       

cx = -2.5; cy = 3;
r_outer = 2.55;
r_inner = r_outer - 0.1;
N = 20;
theta = linspace(0,acos(1.5/2.5), N+1);

gd = R0;
ns_cell = {'R0'};   

for i = 1:N
    th1 = theta(i);
    th2 = theta(i+1);

    x1 = cx + r_outer * cos(th1);
    y1 = cy + r_outer * sin(th1);
    x2 = cx + r_outer * cos(th2);
    y2 = cy + r_outer * sin(th2);
    x3 = cx + r_inner * cos(th2);
    y3 = cy + r_inner * sin(th2);
    x4 = cx + r_inner * cos(th1);
    y4 = cy + r_inner * sin(th1);

    Ri = [3;4; x1; x2; x3; x4; y1; y2; y3; y4];
    gd = [gd, Ri];
    ns_cell{end+1} = sprintf('R%d', i);  
end

ns = char(ns_cell{:});
ns_list = cellstr(ns);


a = ns_list(1:end-1);

sf = [ strjoin(a, '+') ];

ns = ns';    

g = decsg(gd, sf, ns);
geometryFromEdges(model, g);

figure;
pdegplot(model, 'EdgeLabels', 'off');
axis equal;
axis([-1.5 0.5 0 6]);
