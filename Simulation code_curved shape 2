model = createpde();

% 영역 설정
R = [3,4, -3,20,20,-3,0,0,23,23]';                                                        
S = [1; 0; 1; 0.1; 0; 0; 0; 0; 0; 0];          
R0 = [3,4,3.25,3.35,3.35,3.25,0,0,3,3]';  


cx = 0.8; cy = 3;
r_outer = 2.55;
r_inner = r_outer - 0.1;
N = 10;
theta = linspace(0,acos(1.5/2.5), N+1);

gd = R0;
ns_cell = {'R0'};  

for i = 1:N
    th1 = theta(i);
    th2 = theta(i+1);

    x1 = cx + r_outer * cos(th1);
    y1 = cy + r_outer * sin(th1);
    x2 = cx + r_outer * cos(th2);
    y2 = cy + r_outer * sin(th2);
    x3 = cx + r_inner * cos(th2);
    y3 = cy + r_inner * sin(th2);
    x4 = cx + r_inner * cos(th1);
    y4 = cy + r_inner * sin(th1);

    Ri = [3;4; x1; x2; x3; x4; y1; y2; y3; y4];
    gd = [gd, Ri];
    ns_cell{end+1} = sprintf('R%d', i);  
end

gd = [gd, R, S];
ns_cell = [ns_cell, {'R', 'S'}];
ns = char(ns_cell{:});
ns_list = cellstr(ns);
a = ns_list(1:end-2);
sf = ['R', '-', strjoin(a, '-'),'-', 'S' ];
ns = ns';    

g = decsg(gd, sf, ns);
geometryFromEdges(model, g);


% PDE 설정
f = 1000; c = 343;
k = 2*pi*f/c;
specifyCoefficients(model, 'm',0, 'd',0, 'c',1, 'a',-k^2, 'f',0);

% 경계조건
applyBoundaryCondition(model, 'neumann', 'Edge', [24,25,26,27], 'g',0, 'q',-1i*k);
applyBoundaryCondition(model, 'dirichlet', 'Edge', [29 30 31 32], 'u', 0.2);  

% 메시 및 해석 
generateMesh(model, 'Hmax', 0.1);
result4 = solvepde(model);
P = result4.NodalSolution;
Pref = 2*10^(-5);
P_dB = 20 * log10(abs(P) / Pref + eps);

% 시각화
figure;
pdeplot(model, 'XYData', P_dB, 'Mesh', 'off');
title('Sound Pressure Level (dB)');
xlabel('x (m)'); ylabel('y (m)');
cmap = turbo(256);
new_cmap = cmap(100:256, :);   
colormap(new_cmap);  
clim([0 100]);

%(10,3)지점에서의 데시벨
nodes = result.Mesh.Nodes;
X = nodes(1,:)';
Y = nodes(2,:)';

mask = (X>= 9.2) & (X<= 10.3) & ...
       (Y>= 1.2) & (Y<= 2.3);
mean_P_dB = mean(P_dB(mask));
